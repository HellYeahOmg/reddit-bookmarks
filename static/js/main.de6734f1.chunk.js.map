{"version":3,"sources":["components/buttons-group/button.js","components/buttons-group/index.js","components/list/list-item.js","components/list/index.js","App.js","global-styles.js","index.js"],"names":["Button","type","onClick","disabled","className","transparent","style","inverted","icon","stopPropagation","children","isIconButton","undefined","_class","calculatedClassName","Btn","ev","preventDefault","Text","styled","button","props","PrimaryCss","SecondaryInvertedCss","SecondaryCss","DangerCss","css","propTypes","PropTypes","oneOf","isLoading","bool","defaultProps","p","ButtonsGroup","fetchPost","Wrapper","div","ListItem","title","url","removeTopic","id","liked","toggleLike","onDragStart","onDragOver","onDrop","onDragLeave","dragAndDrop","index","data-position","draggable","draggedTo","Number","StatusWrapper","Dislike","Like","RemoveIcon","Title","href","Icon","span","a","initialDnDState","draggedFrom","isDragging","originalOrder","updatedOrder","List","posts","loading","handleSort","useState","setDragAndDrop","event","initialPosition","currentTarget","dataset","position","dataTransfer","setData","newList","itemDragged","remainingItems","filter","item","slice","map","key","App","JSON","parse","localStorage","getItem","setPosts","setLoading","useEffect","setItem","stringify","handlePosts","data","randomNum","Math","floor","random","length","post","e","topic","target","innerText","fetch","then","r","json","newPosts","findIndex","splice","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de6734f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Button = ({\r\n  type,\r\n  onClick,\r\n  disabled,\r\n  className,\r\n  transparent,\r\n  style,\r\n  inverted,\r\n  icon,\r\n  stopPropagation = false,\r\n  children,\r\n}) => {\r\n  const isIconButton = icon !== undefined && icon !== null;\r\n  const isIconTextButton =\r\n    isIconButton && children !== undefined && children !== null;\r\n\r\n  let _class = \"\";\r\n  if (isIconButton) _class = \"icon\";\r\n  if (isIconTextButton) _class = \"icon-text\";\r\n\r\n  const calculatedClassName = className ? _class + className : _class;\r\n\r\n  const handleClick = (ev) => {\r\n    if (stopPropagation) {\r\n      ev.stopPropagation();\r\n      ev.preventDefault();\r\n    }\r\n\r\n    onClick && onClick(ev);\r\n  };\r\n\r\n  return (\r\n    <Btn\r\n      onClick={handleClick}\r\n      disabled={disabled}\r\n      type={type}\r\n      className={calculatedClassName}\r\n      transparent={transparent}\r\n      style={style}\r\n      inverted={inverted}\r\n    >\r\n      {icon}\r\n      <Text>{children}</Text>\r\n    </Btn>\r\n  );\r\n};\r\n\r\nconst Btn = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  border-radius: 4px;\r\n  outline: none;\r\n  padding: 0.4rem 1.6rem 0.6rem;\r\n  height: 3.2rem;\r\n  color: #fff;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-bottom: 2rem;\r\n\r\n  &:disabled {\r\n    cursor: default;\r\n  }\r\n\r\n  ${(props) => props.type === \"primary\" && PrimaryCss};\r\n\r\n  ${(props) =>\r\n    props.type === \"secondary\" &&\r\n    (props.inverted ? SecondaryInvertedCss : SecondaryCss)};\r\n  ${(props) => props.type === \"danger\" && DangerCss};\r\n\r\n  ${({ transparent }) =>\r\n    transparent &&\r\n    css`\r\n      background-color: transparent;\r\n    `};\r\n\r\n  a {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nBtn.propTypes = {\r\n  type: PropTypes.oneOf([\"primary\", \"secondary\", \"danger\"]),\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nBtn.defaultProps = {\r\n  type: \"primary\",\r\n  isLoading: false,\r\n};\r\n\r\nconst PrimaryCss = css`\r\n  background-color: #15bf95;\r\n\r\n  &:enabled:hover {\r\n    background-color: #1ea986;\r\n  }\r\n\r\n  &:active,\r\n  &:enabled:active {\r\n    background-color: #1ea986;\r\n    color: rgba(255, 255, 255, 0.6);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: rgba(21, 191, 149, 0.4);\r\n    color: rgba(255, 255, 255, 0.9);\r\n  }\r\n`;\r\n\r\nconst SecondaryCss = css`\r\n  background-color: rgba(0, 0, 0, 0.05);\r\n  color: #5c5c5c;\r\n\r\n  &:enabled:hover {\r\n    background-color: rgba(0, 0, 0, 0.07);\r\n  }\r\n\r\n  &:active,\r\n  &:enabled:active {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n    color: rgba(92, 92, 92, 0.6);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: rgba(235, 235, 235, 0.4);\r\n    color: rgba(92, 92, 92, 0.4);\r\n  }\r\n`;\r\n\r\nconst SecondaryInvertedCss = css`\r\n  background-color: rgba(255, 255, 255, 0.05);\r\n  color: #fff;\r\n\r\n  &:enabled:hover {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n  }\r\n\r\n  &:active,\r\n  &:enabled:active {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    color: rgba(255, 255, 255, 0.6);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: rgba(255, 255, 255, 0.07);\r\n    color: rgba(255, 255, 255, 0.4);\r\n  }\r\n`;\r\n\r\nconst DangerCss = css`\r\n  background-color: #ca5855;\r\n  color: #fff;\r\n\r\n  &:enabled:hover {\r\n    background-color: #b84e4c;\r\n  }\r\n\r\n  &:active,\r\n  &:enabled:active {\r\n    background-color: #b84e4c;\r\n    color: rgba(255, 255, 255, 0.6);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: rgba(202, 88, 85, 0.4);\r\n    color: rgba(255, 255, 255, 0.9);\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-family: \"PT Sans\", sans-serif;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 1.4rem;\r\n  line-height: 2.2rem;\r\n  margin: 0;\r\n`;\r\n","import { Button } from \"./button\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ButtonsGroup = ({ fetchPost }) => (\r\n  <Wrapper>\r\n    <Button onClick={fetchPost}>frontend</Button>\r\n    <Button onClick={fetchPost}>reactjs</Button>\r\n    <Button onClick={fetchPost}>vuejs</Button>\r\n    <Button onClick={fetchPost}>angular</Button>\r\n  </Wrapper>\r\n);\r\n\r\nconst Wrapper = styled.div``;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ListItem = ({\r\n  title,\r\n  url,\r\n  removeTopic,\r\n  id,\r\n  liked,\r\n  toggleLike,\r\n  onDragStart,\r\n  onDragOver,\r\n  onDrop,\r\n  onDragLeave,\r\n  dragAndDrop,\r\n  index,\r\n}) => (\r\n  <Wrapper\r\n    onDragStart={onDragStart}\r\n    onDragOver={onDragOver}\r\n    onDrop={onDrop}\r\n    onDragLeave={onDragLeave}\r\n    data-position={index}\r\n    draggable\r\n    className={\r\n      dragAndDrop && dragAndDrop.draggedTo === Number(index) && \"dropArea\"\r\n    }\r\n  >\r\n    <StatusWrapper onClick={() => toggleLike(id)}>\r\n      {liked ? <Dislike>&#9825;</Dislike> : <Like>&#10084;</Like>}\r\n    </StatusWrapper>\r\n    <RemoveIcon onClick={() => removeTopic(id)}>&#9747;</RemoveIcon>\r\n    <Title href={url}>{title}</Title>\r\n  </Wrapper>\r\n);\r\n\r\nconst StatusWrapper = styled.div`\r\n  display: flex;\r\n  width: 3rem;\r\n  align-items: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 4rem;\r\n\r\n  &.dropArea {\r\n    background: rgba(0, 0, 0, 0.03);\r\n    margin-left: 1em;\r\n  }\r\n`;\r\n\r\nconst Icon = styled.span`\r\n  cursor: pointer;\r\n  margin: 0 0.4rem;\r\n`;\r\n\r\nconst RemoveIcon = styled(Icon)`\r\n  color: red;\r\n`;\r\n\r\nconst Like = styled(Icon)`\r\n  font-size: 2rem;\r\n`;\r\nconst Dislike = styled(Icon)`\r\n  font-size: 2.5rem;\r\n`;\r\n\r\nconst Title = styled.a`\r\n  text-decoration: underline;\r\n  margin-left: 1.4rem;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { ListItem } from \"./list-item\";\r\nimport styled from \"styled-components\";\r\n\r\nconst initialDnDState = {\r\n  draggedFrom: null,\r\n  draggedTo: null,\r\n  isDragging: false,\r\n  originalOrder: [],\r\n  updatedOrder: [],\r\n};\r\n\r\nexport const List = ({\r\n  posts,\r\n  removeTopic,\r\n  toggleLike,\r\n  loading,\r\n  handleSort,\r\n}) => {\r\n  const [dragAndDrop, setDragAndDrop] = useState(initialDnDState);\r\n\r\n  const onDragStart = (event) => {\r\n    const initialPosition = Number(event.currentTarget.dataset.position);\r\n\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedFrom: initialPosition,\r\n      isDragging: true,\r\n      originalOrder: posts,\r\n    });\r\n\r\n    // this is only for Firefox.\r\n    event.dataTransfer.setData(\"text/html\", \"\");\r\n  };\r\n\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n\r\n    let newList = dragAndDrop.originalOrder;\r\n    const draggedFrom = dragAndDrop.draggedFrom;\r\n    const draggedTo = Number(event.currentTarget.dataset.position);\r\n\r\n    const itemDragged = newList[draggedFrom];\r\n    const remainingItems = newList.filter(\r\n      (item, index) => index !== draggedFrom\r\n    );\r\n\r\n    newList = [\r\n      ...remainingItems.slice(0, draggedTo),\r\n      itemDragged,\r\n      ...remainingItems.slice(draggedTo),\r\n    ];\r\n\r\n    if (draggedTo !== dragAndDrop.draggedTo) {\r\n      setDragAndDrop({\r\n        ...dragAndDrop,\r\n        updatedOrder: newList,\r\n        draggedTo: draggedTo,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onDrop = () => {\r\n    handleSort(dragAndDrop.updatedOrder);\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedFrom: null,\r\n      draggedTo: null,\r\n      isDragging: false,\r\n    });\r\n  };\r\n\r\n  const onDragLeave = () => {\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedTo: null,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {posts.map((p, index) => (\r\n        <ListItem\r\n          {...p}\r\n          key={index}\r\n          removeTopic={removeTopic}\r\n          toggleLike={toggleLike}\r\n          onDragStart={onDragStart}\r\n          onDragOver={onDragOver}\r\n          onDrop={onDrop}\r\n          onDragLeave={onDragLeave}\r\n          index={index}\r\n          dragAndDrop={dragAndDrop}\r\n        />\r\n      ))}\r\n      {loading && \"загрузка...\"}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  width: 80rem;\r\n  margin-top: 5rem;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\nimport { ButtonsGroup, List } from \"./components\";\nimport styled from \"styled-components\";\n\nexport const App = () => {\n  const [posts, setPosts] = useState(\n    JSON.parse(localStorage.getItem(\"posts\")) || []\n  );\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => localStorage.setItem(\"posts\", JSON.stringify(posts)), [\n    posts,\n  ]);\n\n  const fetchPost = (e) => {\n    const topic = e.target.innerText;\n    setLoading(true);\n    fetch(`https://www.reddit.com/r/${topic}.json`)\n      .then((r) => r.json())\n      .then(handlePosts);\n  };\n\n  const handlePosts = ({ data }) => {\n    setLoading(false);\n    const randomNum = Math.floor(\n      Math.random() * (data.children.length - 0 + 1)\n    );\n    const post = data.children[randomNum];\n    if (!post) return;\n    setPosts((posts) => [\n      ...posts,\n      {\n        title: post.data.title,\n        url: post.data.url,\n        id: post.data.id,\n        liked: false,\n      },\n    ]);\n  };\n\n  const handleSort = (posts) => {\n    setPosts(posts);\n  };\n\n  const removeTopic = (id) => {\n    const newPosts = [...posts];\n    const index = newPosts.findIndex((p) => p.id === id);\n    newPosts.splice(index, 1);\n    setPosts(newPosts);\n  };\n\n  const toggleLike = (id) => {\n    const newPosts = [...posts];\n    const index = newPosts.findIndex((p) => p.id === id);\n    newPosts[index].liked = !newPosts[index].liked;\n    setPosts(newPosts);\n  };\n\n  return (\n    <Wrapper>\n      <ButtonsGroup fetchPost={fetchPost} />\n      <List\n        toggleLike={toggleLike}\n        removeTopic={removeTopic}\n        posts={posts}\n        loading={loading}\n        handleSort={handleSort}\n      />\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 128rem;\n  margin: 0 auto;\n`;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html {\r\n    font-size: 10px;\r\n  }\r\n\r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: \"Montserrat\", sans-serif;\r\n    background-color: var(--black-lt-6);\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { GlobalStyles } from \"./global-styles\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}